<html>

<head>

</head>

<body>
    <div>
        <svg id="chart" width="500" viewBox="0 0 80 60"></svg>
    </div>
    Valgt stolpe: <i id="chosenBar">ingen</i><br /> Verdi: <input id="inbox" type="number" min="1" max="10" />
    <button id="addBar" onclick="adde()">Legg til stolpe</button>
    <button id="changeBar" onclick="change()" disabled>Endre valgt stolpe</button><br />
    <button id="removeBar" onclick="remove()" disabled>Fjerne valgt stolpe</button>



    <script>
        let svgTag = document.getElementById('chart');
        let chosenBarText = document.getElementById("chosenBarText");
        let chosenBar = document.getElementById("chosenBar");
        let inbox = document.getElementById("inbox");
        let addBar = document.getElementById("addBar");
        let changeBar = document.getElementById("changeBar");
        let removeBar = document.getElementById("removeBar");

        //Moddel 
        let numbers = [8, 7, 6, 5, 4];
        let chosenBarNumber = "ingen";

        //View
        show();

        function show() {
            let svgInnerHtml = '';
            for (let i = 0; i < numbers.length; i++) {
                let barNo = i + 1;
                let border = 0;
                if (barNo == chosenBarNumber) {
                    border = 1;
                }
                svgInnerHtml += createBar(numbers[i], i + 1, border);
            }
            svgTag.innerHTML = svgInnerHtml;
        }


        function createBar(number, barNo, border) {
            const width = 8;
            const spacing = 2;
            let x = (barNo - 1) * (width + spacing);
            let height = number * 6;
            let y = 60 - height;
            let color = calcColor(1, 10, barNo);
            return `<rect 
        onclick="barClicked(${barNo})" 
        width="${width}" 
        height="${height}"
        x="${x}" 
        y="${y}" 
        fill="${color}"
        stroke-width="${border}"
        stroke="black";> 
        </rect>`

        }

        function calcColor(min, max, val) {
            var minHue = 150,
                maxHue = 0;
            var curPercent = (val - min) / (max - min);
            var colString = "hsl(" + ((curPercent * (maxHue - minHue)) + minHue) + ",100%,50%)";
            return colString;
        }

        //Controller   

        function barClicked(barNo) {
            if (barNo == chosenBarNumber) {
                removeBar.disabled = true;
                changeBar.disabled = true;
                chosenBarNumber = "ingen";


            } else {
                chosenBarNumber = barNo;
                removeBar.disabled = false;
                changeBar.disabled = false;
            }
            chosenBar.innerHTML = chosenBarNumber;
            show();
        }

        function remove() {
            numbers.splice(chosenBarNumber - 1, 1);

            show();
        }

        function adde() {

            if (inbox.value > 10) {
                alert("max 10!")
            } else if (inbox.value < 1) {
                alert("mins 1!")
            } else {
                numbers.push(inbox.value);
            }
            show();
        }

        function change() {

            if (inbox.value > 10) {
                alert("max 10!")
            } else if (inbox.value < 1) {
                alert("mins 1!")
            } else {
                numbers[chosenBarNumber - 1] = inbox.value;
            }
            show();
        }
    </script>
</body>

</html>